#include <bits/stdc++.h>
using namespace std;

int main()
{
    //initialize with user-defined elements
    vector<int> arr{ 1, 2, 3, 4, 5, -1, -2, 6 };
 
    cout << "Printing the vector...\n";
    for (auto i : arr)
        cout << i << " ";
    cout << endl;
 
    return 0;
}

***************************************************************************************
vector<vector<v(size ,element)
****************************************************************************************
vectors of vectors
# include<iostream>
# include<vector>
using namespace std;
int main(){
    vector<vector<int>> v;
    for(int i=0;i<3;i++){
        vector<int>temp;        //indexing
        for(int j=0;j<3;j++){
            temp.push_back(i);
        }
        v.push_back(temp);
    }
    for(int i=0;i<v.size();i++){
        for(int j=0;j<v[i].size();j++){
            cout<<v[i][j];
        }
        cout<<endl;
    }
}


array of vectors

# include<iostream>
# include<vector>
using namespace std;
int main(){
    vector<int> v[3];
    for(int i=0;i<3;i++){
        vector<int>temp;        //indexing
        for(int j=0;j<3;j++){
            v[i].push_back(i);
        }
        
    }
    for(int i=0;i<3;i++){
        for(int j=0;j<v[i].size();j++){
            cout<<v[i][j];
        }
        cout<<endl;
    }
}
*****************************************************************************
# include<iostream>
# include<vector>
using namespace std;
int main(){
    int m ,n,x;
    cout<<"enter no of rows and column";
    cin>>m>>n;
    vector<vector<int>> v;
    for(int i=0;i<m;i++){
        vector<int>temp;
        for(int j=0;j<n;j++){
            cin>>x;
            temp.push_back(x);
        }
        v.push_back(temp);
    }
    for(int i=0;i<v.size();i++){
        for(int j=0;j<v[i].size();j++){
            cout<<v[i][j]<<" ";
        }
        cout<<endl;
    }
}

output:
enter no of rows and column
2 2
1 2    
3 4
1 2 
3 4 

************************************************************************
taking inpput
int main() {
// your code goes here
int n1,n2;
cin>>n1>>n2;
vector<int> a(n1),b(n2);
for(int i=0;i<n1;i++)
{
cin>>a[i];
}
for(int i=0;i<n2;i++)
{
cin>>b[i];
}
****************************************************************************
adding two array:

#include <bits/stdc++.h>
using namespace std;
vector<int> add(vector<int> &a,vector<int> &b)
{
int i = a.size()-1,j=b.size()-1;
vector<int> sol;
int carry = 0;
while(j>=0)
{
int curr = a[i]+b[j]+carry;
int rem = curr%10;
 carry = curr/10;
sol.push_back(rem);
i--;
j--;
}
while(i>=0)
{
int curr = a[i]+carry;
int rem = curr%10;
 carry = curr/10;
sol.push_back(rem);
i--;
}
if(carry==1)
{
sol.push_back(1);
}
reverse(sol.begin(),sol.end());
return sol;
}
int main() {
// your code goes here
int n1,n2;
cin>>n1>>n2;
vector<int> a(n1),b(n2);
for(int i=0;i<n1;i++)
{
cin>>a[i];
}
for(int i=0;i<n2;i++)
{
cin>>b[i];
}
if(n1>n2)
{
vector<int> ans = add(a,b);
for(int i=0;i<ans.size();i++)
{
cout<<ans[i]<<" ";
}
}

}
else
{
vector<int> ans = add(b,a);
for(int i=0;i<ans.size();i++)
{
cout<<ans[i]<<" ";
}
}
return 0;
}

3 1
9 9 9
1
1 0 0 0
***********************************************************************************************************


2d vector

int n= grid.size(); int m= grid[0].size();
        int cnt=0;
        //create a visited 2d array;
        //vector<vector<int>> vis;//[n][m];
        vector<vector<int>> vis(n,vector<int>(m,0));


























