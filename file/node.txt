app.js

import { useState, useEffect } from "react";
import "./App.css";
import sun from "./sun.png";
import sun1 from "./sun (1).png";
import cloudy from "./cloudy-day.png";
import haze from "./haze.png";
import rainy from "./rainy-day.png";
import storm from "./storm.png";
import index from "./index.html"
var id   ;
function App(props) {
  const [city, setCity] = useState("Delhi");
  const [search, setSearch] = useState("Delhi");
  const [temp, setTemp] = useState("28°C");
  const [desc, setDesc] = useState("");
  const [weathers, setweathers] = useState({});

  const valueofsearchbox = (event) => {
    setSearch(event.target.value);
  };
    const tellme = () => {
    let a = " " + search;
      let b = a.length;
      let c = "";
      for (let i = 0; i < b; i++) {
        if (a.charAt(i) == " ") {
          c = c + a.charAt(i + 1).toUpperCase();
        } else if (a.charAt(i) != " ") {
          c = c + a.charAt(i + 1);
        }
      }
    setCity(c);
    fetch(
      `https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=4fc29c297a8262f72916963077e74a0e`
    )
      .then((apidata) => {
        let actualdata = apidata.json();
        return actualdata;
      })
      .then((actualdata) => {
        console.log(actualdata);
        setweathers(actualdata);
        let temp = Math.round(actualdata.main.temp);
        id=actualdata.weather[0].id;
        console.log(id);
        setTemp(temp - 273 + "°C");
      })
      .catch((error) => {
        setTemp("place does not exsist");
      });
  };
  return (
    <>
   <section className={(typeof weathers.main != undefined)?((id>=600)?'body': (id>=500)?'rainy':(id>=400)?'rainy':(id>=300)?'cloudy':(id>=200)?'storm':'body'):'body'}>
        <div className="col-md-12">
          <div className="wetherBg">
            <h1 className="heading">WEATHER APP</h1>
            <div className="d-grid  gap-3 col-4 mt-4">
              <input
                style={{ color: "black" }}
                onChange={valueofsearchbox}
                className="form-control"
              />
              <button onClick={tellme} className="btn btn-primary" type="button">Search</button>
            </div>
          </div>

          <div className="col-md-12 text-center">
            <div className="shadow rounded wetherResultBox">
              <img className="icon" src={(typeof weathers.main != undefined)?((id>=700)?sun:(id>=600)?sun1:(id>=500)?rainy:(id>=400)?rainy:(id>=300)?cloudy:(id>=200)?storm:sun):sun} />
              <h1 className="city">{city}</h1>
              <h1 className="temp">{temp}</h1>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}

export default App;


2.  app.css

.body{
  background-image:url("./bg.jpeg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:744px;

}
.cloudy{
  background-image:url("./cloudybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:744px;
}
.rainy{
  background-image:url("./rainybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:744px;
}
.storm{
  background-image:url("./storm.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:744px;
}
.wetherBg{

 padding :40px;
  display:flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
 
 

}
.btn-primary {
  color: #212529;
  background: #00B4CC;
    border-color: #7cc;
    height:55px;
    font-size: 1.5rem;
    
}


.heading{
  color:white;
  font-weight: 700;
}
.form-control{
  font-size: 1.5rem;
 
}

.wetherResultBox{
  margin: 40px 540px;
  height: 310px;
  width:500px;
}
.icon{
  margin-top: 2rem;
  width:100px;
  height:100px;
}
.city{
  font-size:35px;
}
.temp{
  font-size:55px;
  font-weight:700;
}


@media (max-width:500px){
  .wetherBg {
    padding: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-left: -97px;
}
  .wetherResultBox {
    margin: 40px 540px;
    height: 310px;
    width: 500px;
    margin-left: -39px;
}
.body{
  background-image:url("./bg.jpeg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1099px;
  width:500px;

}
.cloudy{
  background-image:url("./cloudybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1099px;
  width:500px;
}
.rainy{
  background-image:url("./rainybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1099px;
  width:500px;
}
.storm{
  background-image:url("./storm.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1099px;
  width:500px;
}
}
@media(max-width:400px){
  
  .wetherBg {
    padding: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-left: -97px;
}
  .body{
    background-image:url("./bg.jpeg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1399px;
    width:500px;
  
  }
  .cloudy{
    background-image:url("./cloudybg.jpg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1099px;
    width:500px;
  }
  .rainy{
    background-image:url("./rainybg.jpg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1099px;
    width:500px;
  }
  .storm{
    background-image:url("./storm.jpg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1099px;
    width:500px;
  }
}
@media(max-width:300px){
  .wetherBg {
    padding: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-left: -97px;
}
  .body{
    background-image:url("./bg.jpeg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1599px;
    width:500px;
  
  }
  .cloudy{
    background-image:url("./cloudybg.jpg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1099px;
    width:500px;
  }
  .rainy{
    background-image:url("./rainybg.jpg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1099px;
    width:500px;
  }
  .storm{
    background-image:url("./storm.jpg") ;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: 100% 100%;
    height:1099px;
    width:500px;
  }
}
@media (max-width:1000px) and (min-width:500px){
  .wetherBg {
    padding: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-left: -140px;
}
  .wetherResultBox {
    margin: 40px 540px;
    height: 310px;
    width: 500px;
    margin-left: 175px;
}
.body{
  background-image:url("./bg.jpeg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1000px;

}
.cloudy{
  background-image:url("./cloudybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1000px;
}
.rainy{
  background-image:url("./rainybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1000px;
}
.storm{
  background-image:url("./storm.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1000px;
}
}
@media (max-width:1500px) and (min-width:1000px){
  .wetherBg {
    padding: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-left: -145px;
}
  .wetherResultBox {
    margin: 40px 540px;
    height: 310px;
    width: 500px;
    margin-left: 328px;
}
.body{
  background-image:url("./bg.jpeg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1300px;

}
.cloudy{
  background-image:url("./cloudybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1300px;
}
.rainy{
  background-image:url("./rainybg.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1300px;
}
.storm{
  background-image:url("./storm.jpg") ;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100%;
  height:1450px;
  width:1300px;
}
}

index.html


<!-- <!doctype html><html lang="en"><head><meta charset="utf-8"/><link rel="icon" href="/favicon.ico"/><meta name="viewport" content="width=device-width,initial-scale=1"/><meta name="theme-color" content="#000000"/><meta name="description" content="Web site created using create-react-app"/><link rel="apple-touch-icon" href="/logo192.png"/><link rel="manifest" href="/manifest.json"/><title>React App</title><script defer="defer" src="/static/js/main.c34cda07.js"></script><link href="/static/css/main.073c9b0a.css" rel="stylesheet"></head><body><noscript>You need to enable JavaScript to run this app.</noscript><div id="root"></div></body></html> -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
   
  </body>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</html>













