subarray sum:

Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output: 2 4
Explanation: The sum of elements 
from 2nd position to 4th position 
is 12.

code:
#include <bits\stdc++.h>
using namespace std;
int main()
{
    int a[10] = {1,2,3,4,5,6,7,8,9,10};
    int i, j, s;
    for (i = 0; i < 5; i++)
    {    s=0;
        for (j = i; j < 5; j++)
        {
            s = s + a[j];
           // cout<<s<<endl;
            if (s == 15)
            {   //cout<<"1";
                cout << i+1 << " and " << j+1 << endl;
                break;
            }
           
        }
       if(s==12)
        break;
    }
    //cout<<"1";
}
************************************************************************************************************************************
Move all negative elements to end
input:
Input : 
N = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output : 
1  3  2  11  6  -1  -7  -5

code:
# include<bits\stdc++.h>
using namespace std;
int main(){
    int arr[8] = {1, -1, 3, 2, -7, -5, 11, 6 };
    vector<int>ans;
    int i;
    for(i=0;i<8;i++){
        if(arr[i]>0){
            ans.push_back(arr[i]);
        }
    }
    for(i=0;i<8;i++){
        if(arr[i]<0){
            ans.push_back(arr[i]);


        }
    }
    for(i=0;i<ans.size();i++){
        cout<<ans[i]<<" ";
    }
}
*********************************************************************************************************************
Subarrays with equal 1s and 0s

input:
n = 7
A[] = {1,0,0,1,0,1,1}
Output: 8

code:
#include <bits\stdc++.h>
using namespace std;
int main()
{
    int arr[5] = {1,1,1,1,0};
    int i, j, s , count=0;
    for (i = 0; i < 5; i++)
    {     s=0;
        for (j = i; j < 5; j++)
        {
            if (arr[j] == 0)
            {
                arr[j] = -1;
            }
            s = s + arr[j];
            if (s == 0)
            {
                count++;
            }
        }
        
       
    }
         cout << count;


   
}
*************************************************************************
finding duplicates:

# include<bits\stdc++.h>
using namespace std;
int main(){
    int arr[12] = { 1,2,4,6,3,4,2,5,3,2,3,4};
    int i , j,c=0;
    for(i=0;i<12;i++){
        for(j=i+1;j<12;j++){
            if(arr[i]==arr[j]){
                if(i!=j){
                if(c==0  && arr[j]!='\0'){
                    cout<<arr[i]<<" ";
                    c++;
                }
                arr[j]='\0';
            }
            }
           
        }
         c=0;
    }
**********************************************************************
Alternate positive and negative numbers

input:
N = 9
Arr[] = {9, 4, -2, -1, 5, 0, -5, -3, 2}

code:
# include<bits\stdc++.h>
using namespace std;
int main(){
    int a[9] = {9, 4, -2, -1, 5, 0, -5, -3, 2};
    vector<int> pos ,neg;
    int i,j,k;
    for(i=0;i<9;i++){
        if(a[i]<0){
            neg.push_back(a[i]);
        }
        else
        pos.push_back(a[i]);
    }
    i=0,j=0,k=0;
    while(i<neg.size() && j<pos.size()){
        a[k++]=neg[i++];
        a[k++]=pos[j++];
    }
    while(j<pos.size()){
        a[k++]=pos[j++];
    }
    while(i<neg.size()){
        a[k++]=neg[i++];
    }
    for(i=0;i<9;i++){
        cout<<a[i]<<" ";
    }
}

************************************************************************























